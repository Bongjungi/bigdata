--[II] SELECT 문 - 검색문
SELECT * FROM TAB; -- SCOTT이 가지고 있는 테이블
SELECT * FROM DEPT; -- DEPT 테이블의 모든 열(필드), 모든 행
SELECT * FROM EMP;
--DEPT 테이블의 구조
DESC DEPT;
-- 2. SQL문 실행(특정 필드만 출력)
SELECT ENAME,DEPTNO FROM EMP;
SELECT EMPNO AS "사번", ENAME AS "이름", SAL AS "급여",JOB AS "직책" FROM EMP;--별칭
SELECT EMPNO AS 사번, ENAME AS 이름, SAL AS 급여,JOB AS 직책 FROM EMP;--별칭
SELECT EMPNO 사번, ENAME 이름, SAL 급여,JOB 직책 FROM EMP;--별칭
SELECT EMPNO "사 번", ENAME "이 름", SAL "급 여",JOB "직 책" FROM EMP;--별칭
SELECT EMPNO NO, ENAME NAME, SAL SALARY,JOB JOB FROM EMP;--별칭
-- 3. WHERE절(조건); 비교연산자 이용
SELECT EMPNO "사번" , ENAME "이름", SAL "급여" FROM EMP WHERE SAL = 3000;
SELECT EMPNO "사번" , ENAME "이름", SAL "급여" FROM EMP WHERE SAL != 3000; -- != <> ^= "다르다"
SELECT * FROM EMP WHERE DEPTNO=10;
--이름이 FORD인 직원의 EMPNO. ENAME,MGR을 출력
SELECT EMPNO, ENAME,MGR FROM EMP WHERE ENAME='SMITH';
-- 4. 논리 연산자
SELECT * FROM EMP WHERE SAL BETWEEN 2500 AND 3000;
-- 비교연산은 숫자,문자,DATE형 필드 모두 가능하다.
-- 사원의 이름(ENAME)이 'A','B','C'로 시작하는 사원의 모든 필드
SELECT * FROM EMP WHERE ENAME<'D';
SELECT * FROM EMP WHERE HIREDATE < '81/01/01';
DESC EMP;
--5. 날짜 표기법 세팅(현재 : RR/MM/DD)
ALTER SESSION SET NLS_DATE_FORMAT = 'MM-DD-RR';
ALTER SESSION SET NLS_DATE_FORMAT = 'RR/MM/DD';

SELECT ENAME, JOB, HIREDATE FROM EMP 
WHERE HIREDATE BETWEEN TO_DATE('1981/02/20','YYYY/MM/DD') AND TO_DATE('1981/05/01')
ORDER BY HIREDATE;

SELECT *FROM EMP WHERE TO_CHAR(HIREDATE,'RRRR')=1982;

SELECT HIREDATE FROM EMP;
--연봉이 24000 이상인 직원의 ENAME, SAL, 연봉 출력(연봉 = SAL*12)
SELECT ENAME, SAL, SAL*12 연봉 FROM EMP WHERE SAL*12>=24000 ORDER BY 연봉;
--작동 순서 FROM -> WHERE -> SELECT -> ORDER BY
SELECT * FROM EMP WHERE DEPTNO=10 AND JOB='MANAGER';
SELECT * FROM EMP WHERE DEPTNO=10 OR JOB='MANAGER';
SELECT * FROM EMP WHERE DEPTNO<>10;
SELECT ENAME, SAL, COMM FROM EMP;
SELECT ENAME, SAL, NVL(COMM,0) FROM EMP; --NVL(A,B) A와 B는 같은 타입이어야 함. 
SELECT ENAME, COMM, NVL(COMM,0) 셀, COMM+1 FROM EMP; -- 셀+100을 바로 넣으면 안됌.
--6. 연결연산자(||)
SELECT ENAME ||' 은(는) '|| JOB ||' 이다.' "EMPLOYEES" FROM EMP;
--7. 중복제거
SELECT JOB FROM EMP;
SELECT DISTINCT JOB FROM EMP;
--8. SQL연산자(BETWEEN, IN, LIKE, IS NULL)
    --(1)BETWEEN
SELECT EMPNO, ENAME, SAL FROM EMP WHERE SAL BETWEEN 1500 AND 3000;
    --사원 이름이 'B','C'로 시작하는 사원의 모든 필드
SELECT * FROM EMP WHERE ENAME BETWEEN 'B' AND 'D' AND ENAME != 'D';
    --(2)IN
    --부서번호가 10,20,40부서 사원의 모든 필드
SELECT * FROM EMP WHERE DEPTNO = 10 OR DEPTNO = 20 OR DEPTNO = 40;
SELECT * FROM EMP WHERE NOT  (DEPTNO = 10 OR DEPTNO = 20 OR DEPTNO = 40);
SELECT * FROM EMP WHERE DEPTNO IN (10, 20, 40);
    --부서번호가 10,20,40번 부서를 제외한 사원의 모든 필드
SELECT * FROM EMP WHERE DEPTNO NOT IN (10,20,40);
    --(3) LIKE 연산
    --이름이 M으로 시작하는 사원의 모든 필드
SELECT * FROM EMP WHERE ENAME LIKE 'M%';
    --이름에 N이 들어가는 사원의 모든 필드
SELECT * FROM EMP WHERE ENAME LIKE '%N%';
    --이름이 S로 끝나는 사원의 모든 필드
SELECT * FROM EMP WHERE ENAME LIKE '%S';



INSERT INTO EMP VALUES (9999,'LISA%',NULL,NULL,NULL,9000,9000,40);
 --이름에 %가 들어가는 사원의 모든 필드
SELECT * FROM EMP WHERE ENAME LIKE '%\%%' ESCAPE '\';
ROLLBACK;--DML(데이터 조작어)를 취소





    --SAL이 5로 끝나는 사원의 모든 필드
SELECT * FROM EMP WHERE SAL LIKE '%5';
    --82년도에 입사한 사원의 모든 필드
SELECT * FROM EMP WHERE HIREDATE LIKE '82%';
    --1월에 입사한 사원의 모든 필드
SELECT * FROM EMP WHERE HIREDATE LIKE '__/01/__';
    --82년도가 아닌 년도에 입사한 사원의 모든 필드
SELECT * FROM EMP WHERE HIREDATE NOT LIKE '82/%';
    --(4) IS NULL
    --상여금이 없는 사원의 모든 필드
SELECT * FROM EMP WHERE COMM IS NULL;
    --상여금이 있는 사원의 모든 필드
SELECT * FROM EMP WHERE COMM IS NOT NULL AND COMM!=0;
SELECT * FROM EMP WHERE NOT COMM IS NULL AND COMM!=0;
    --9.정렬(오름차순,내림차순)
SELECT ENAME ,SAL FROM EMP ORDER BY SAL; -- 오름차순 정렬
SELECT ENAME, SAL FROM EMP ORDER BY SAL ASC; -- 오름차순 정렬
SELECT ENAME, SAL FROM EMP ORDER BY HIREDATE; --입사 먼저한 순서
SELECT ENAME, SAL, HIREDATE FROM EMP ORDER BY HIREDATE DESC;
    --이름, 연봉(SAL*12+COMM)을 출력(연봉이 높은 순으로, 연봉이 같은 경우 이름순으로)
SELECT ENAME 이름, (SAL*12+NVL(COMM,0)) 연봉 FROM EMP ORDER BY 연봉 DESC, 이름;
    --사번, 이름, SAL 출력(부서순, 부서가 같으면 입사일순으로 정렬
SELECT EMPNO, ENAME, HIREDATE, SAL FROM EMP ORDER BY DEPTNO,HIREDATE; 

--EX
SELECT * FROM EMP;
SHOW USER;
SELECT * FROM TAB;
SELECT EMPNO 사번, ENAME 이름, SAL 급여,JOB 업무, HIREDATE 입사일 FROM EMP;
SELECT EMPNO 사번, ENAME 이름, SAL 급여 FROM EMP WHERE SAL<2000;
SELECT EMPNO 사번, ENAME 이름, JOB 업무, HIREDATE 입사일 FROM EMP WHERE HIREDATE>'81/02/28';
SELECT * FROM EMP WHERE JOB = 'SALESMAN';
SELECT * FROM EMP WHERE JOB <> 'CLERK';
SELECT EMPNO 사번, ENAME 이름, SAL 급여 FROM EMP WHERE SAL<=3000 AND SAL>=1500;
SELECT EMPNO 사번, ENAME 이름, JOB 업무, DEPTNO 부서코드 FROM EMP WHERE DEPTNO = 10 OR DEPTNO = 30;
SELECT EMPNO 사번, ENAME 이름, JOB 업무, DEPTNO 부서코드 FROM EMP WHERE SAL>=3000 OR JOB = 'SALESMAN';
SELECT  EMPNO 사번, ENAME 이름, JOB 업무, SAL 급여 FROM EMP WHERE SAL>=2500 AND JOB = 'MANAGER';
-- 연산자 적용 우선순위를 생각하여 (SAL*12+NVL(COMM,0))처럼 괄호를 넣는다.
SELECT ENAME ||'은 '|| JOB ||' 업무이고 연봉은 '|| (SAL*12+NVL(COMM,0)) ||'다.' AS "스타일" FROM EMP;
